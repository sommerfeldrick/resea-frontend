#!/bin/bash

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${YELLOW}üöÄ Iniciando testes de homologa√ß√£o...${NC}\n"

# 1. Verificar ambiente
echo -e "üîç Verificando ambiente..."
if [ ! -f ".env" ]; then
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado${NC}"
    exit 1
fi

# 2. Instalar depend√™ncias
echo -e "\nüì¶ Instalando depend√™ncias..."
npm install
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erro ao instalar depend√™ncias${NC}"
    exit 1
fi

# 3. Build do projeto
echo -e "\nüî® Buildando o projeto..."
npm run build
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erro no build${NC}"
    exit 1
fi

# 4. Rodar testes automatizados
echo -e "\nüß™ Rodando testes automatizados..."
npm test
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Falha nos testes automatizados${NC}"
    exit 1
fi

# 5. Rodar testes de integra√ß√£o
echo -e "\nüîÑ Rodando testes de integra√ß√£o..."
bash scripts/test-integration.sh
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Falha nos testes de integra√ß√£o${NC}"
    exit 1
fi

# 6. Verificar performance
echo -e "\n‚ö° Testando performance..."
curl -w "\nTempo de resposta: %{time_total}s\n" -o /dev/null -s "http://localhost:3001/api/health"

# 7. Abrir checklist de testes manuais
echo -e "\nüìã Abrindo checklist de testes manuais..."
if command -v code &> /dev/null; then
    code scripts/manual-test-checklist.md
else
    echo "Por favor, abra manualmente: scripts/manual-test-checklist.md"
fi

echo -e "\n${GREEN}‚úÖ Setup de testes completo!${NC}"
echo -e "${YELLOW}Por favor, complete o checklist de testes manuais antes de fazer deploy.${NC}"

# Instru√ß√µes finais
echo -e "\nüìù Pr√≥ximos passos:"
echo "1. Complete o checklist de testes manuais"
echo "2. Verifique os logs de erro"
echo "3. Valide a performance"
echo "4. Fa√ßa backup do banco de dados"
echo "5. Prepare o plano de rollback"

echo -e "\n${YELLOW}Quando terminar os testes, execute:${NC}"
echo "npm run build && npm run deploy"
